{"version":3,"file":"BaseChart.fdeb06b0.js","sources":["../../../src/echarts/components/BaseChart.vue"],"sourcesContent":["\r\n<template>\r\n  <div style=\"width: 100%; height: 100%\" ref=\"chartRef\"></div>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { EChartsOption } from 'echarts';\r\nimport { PropType } from 'vue';\r\nimport { useBaseECharts } from '../baseChart';\r\nimport { HowEchartsInitOpts } from '../types/echarts';\r\nimport { use } from \"echarts/core\";\r\nconst chartRef = ref();\r\nconst { setOption, echartInstance } = useBaseECharts(chartRef)\r\n\r\nconst props = defineProps({\r\n  option: {\r\n    default: () => ({}),\r\n    type: Object as PropType<EChartsOption | EChartsOption[]>\r\n  },\r\n  theme: {\r\n    default: undefined,\r\n    type: [String, Object],\r\n  },\r\n  use: {\r\n    default: () => [],\r\n    type: Object as PropType<any>\r\n  },\r\n  config: {\r\n    default: () => ({}),\r\n    type: Object as PropType<HowEchartsInitOpts>,\r\n  }\r\n})\r\n\r\nuse(props.use)\r\n\r\ndefineExpose({\r\n  getInstance: echartInstance,\r\n  on: echartInstance()?.on,\r\n  dispatchAction: echartInstance()?.dispatchAction,\r\n})\r\n\r\nwatch([() => props.option, () => props.theme],\r\n  ([option, theme]) => {\r\n    setOption(option, theme)\r\n  },\r\n  {\r\n    immediate: true\r\n  })\r\n</script>\r\n"],"names":["chartRef","ref","setOption","echartInstance","useBaseECharts","use","props","expose","_a","_b","watch","option","theme"],"mappings":"kYAUAA,EAAAC,IACA,CAAA,UAAAC,EAAA,eAAAC,CAAA,EAAAC,EAAAJ,CAAA,EAqBA,OAAAK,EAAAC,EAAA,GAAA,EAEAC,EAAA,CAAa,YAAAJ,EACE,IAAAK,EAAAL,EAAA,IAAA,YAAAK,EAAA,GACS,gBAAAC,EAAAN,EAAA,IAAA,YAAAM,EAAA,cACY,CAAA,EAGpCC,EAAA,CAAA,IAAAJ,EAAA,OAAA,IAAAA,EAAA,KAAA,EAA4C,CAAA,CAAAK,EAAAC,CAAA,IAAA,CAExCV,EAAAS,EAAAC,CAAA,CAAuB,EACzB,CACA,UAAA,EACa,CACb"}