{"version":3,"file":"Mask.727c80bb.js","sources":["../../../src/vueComponent/mask/Index.vue","../../src/views/vueComponents/mask/index.vue","../../src/views/vueComponents/mask/Index.md"],"sourcesContent":["<template>\r\n  <teleport :to=\"props.to\">\r\n    <div v-show=\"visible\" :style=\"{'background-color': bgColor }\" :class=\"['mask-wrapper', positionClass]\"\r\n      @click=\"handleMask\">\r\n      <Transition name=\"custom-classes\" enter-active-class=\"animate__animated animate__faster animate__zoomIn\"\r\n        leave-active-class=\"animate__animated animate__faster animate__zoomOut\">\r\n\r\n        <div v-if=\"visible\">\r\n          <slot></slot>\r\n        </div>\r\n      </Transition>\r\n    </div>\r\n  </teleport>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { PropType, TeleportProps } from 'vue';\r\nconst props = defineProps({\r\n  to: {\r\n    type: [String, null, undefined] as unknown as PropType<TeleportProps>,\r\n    default: \"body\"\r\n  },\r\n  isBg: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  position: {\r\n    type: String as PropType<\"center\" | \"top\" | \"left\" | \"right\" | \"bottom\" | \"\">,\r\n    default: \"center\"\r\n  },\r\n  visible: {\r\n    default: false,\r\n    type: Boolean\r\n  },\r\n  isClickMaskClose: {\r\n    default: true,\r\n    type: Boolean\r\n  }\r\n})\r\n\r\nconst emit = defineEmits<{\r\n  (e: \"after-close\", visile: boolean): void;\r\n  (e: \"update:visible\", visile: boolean): void;\r\n}>()\r\n\r\nconst bgColor = computed(() => props.isBg ? '#00000073' : '#00000000')\r\nconst positionClass = computed(() => {\r\n  if (props.position === \"center\") {\r\n    return \"flex-center\"\r\n  } else if (props.position === \"left\") {\r\n    return \"flex-left\"\r\n  } else if (props.position === \"right\") {\r\n    return \"flex-right\"\r\n  } else if (props.position === \"top\") {\r\n    return \"flex-top\"\r\n  } else if (props.position === \"bottom\") {\r\n    return \"flex-bottom\"\r\n  } else {\r\n    return \"\"\r\n  }\r\n})\r\n\r\n// 点击关闭侧栏\r\nfunction handleMask() {\r\n  if (!props.isClickMaskClose) return // 打开此选项关闭\r\n  emit(\"after-close\", false)\r\n  emit(\"update:visible\", false)\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n.mask-wrapper {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  z-index: @defaultZIndex;\r\n\r\n  &.flex-center {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  &.flex-left {\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n  }\r\n\r\n  &.flex-right {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n  }\r\n\r\n  &.flex-top {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n  }\r\n\r\n  &.flex-bottom {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n  }\r\n}\r\n</style>","<template>\r\n  <a-button @click=\"visible = true\">打开遮板</a-button>\r\n  <!-- prop 预留多个配置，to 挂载点、isBg 是否显示蒙版背景色、position位置top、bottom、left、right、center 和 空字符串，默认是居中\r\n  isClickMaskClose 表示是否点击蒙版关闭\r\n  @after-close 是关闭之后的回调事件 -->\r\n  <how-mask position=\"center\" v-model:visible=\"visible\">\r\n    <div style=\"width: 500px;height:300px;backgroundColor:#FFF\">我是组件</div>\r\n  </how-mask>\r\n</template>\r\n<script lang=\"ts\" setup>\r\nimport { HowMask } from \"howuse/vueComponent\"\r\nconst visible = ref(false)\r\n</script>\r\n<style lang=\"less\" scoped>\r\n\r\n</style>","\n<script setup lang=\"ts\">\nconst excerpt = undefined\n  defineExpose({ frontmatter: {}, excerpt: undefined })\n</script>\n<script lang=\"ts\">\n/** frontmatter meta-data for MD page **/\nexport interface Frontmatter {\n  title?: string\n  description?: string\n  subject?: string\n  category?: string\n  name?: string\n  excerpt?: string\n  image?: string\n  layout?: string\n  requiredAuth?: boolean\n  meta?: Record<string, any>[]\n  [key: string]: unknown\n}\nexport const frontmatter: Frontmatter = {}\nexport const excerpt: string | undefined = \"\"\n\n</script>\n<template>\n<div class=\"markdown-body\"><pre class=\"language-vue\"><code class=\"language-vue\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a-button</span> <span class=\"token attr-name\">@click</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visible = true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>打开遮板<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a-button</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token comment\">&lt;!-- prop 预留多个配置，to 挂载点、isBg 是否显示蒙版背景色、position位置top、bottom、left、right、center 和 空字符串，默认是居中\r\n  isClickMaskClose 表示是否点击蒙版关闭\r\n  @after-close 是关闭之后的回调事件 --></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>how-mask</span> <span class=\"token attr-name\">position</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>center<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">v-model:</span>visible</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>visible<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\r\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 500px<span class=\"token punctuation\">;</span><span class=\"token property\">height</span><span class=\"token punctuation\">:</span>300px<span class=\"token punctuation\">;</span><span class=\"token property\">backgroundColor</span><span class=\"token punctuation\">:</span>#FFF</span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">></span></span>我是组件<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\r\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>how-mask</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ts<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">setup</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\r\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> HowMask <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"howuse/vueComponent\"</span>\r\n<span class=\"token keyword\">const</span> visible <span class=\"token operator\">=</span> <span class=\"token function\">ref</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\r\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\r\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>style</span> <span class=\"token attr-name\">lang</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>less<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">scoped</span><span class=\"token punctuation\">></span></span><span class=\"token style\"><span class=\"token language-css\">\r\n\r\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>style</span><span class=\"token punctuation\">></span></span></code></pre>\n</div>\n</template>\n"],"names":["bgColor","computed","props","positionClass","handleMask","emit","visible","ref","expose"],"mappings":"skBA4CAA,EAAAC,EAAA,IAAAC,EAAA,KAAA,YAAA,WAAA,EACAC,EAAAF,EAAA,IACEC,EAAA,WAAA,SACE,cAAOA,EAAA,WAAA,OAEP,YAAOA,EAAA,WAAA,QAEP,aAAOA,EAAA,WAAA,MAEP,WAAOA,EAAA,WAAA,SAEP,cAEA,EACF,EAIF,SAAAE,GAAA,CACE,CAAAF,EAAA,mBACAG,EAAA,cAAA,EAAA,EACAA,EAAA,iBAAA,EAAA,EAA4B,6mBCtD9B,MAAAC,EAAAC,EAAA,EAAA;;;;;;;;;;;;;;;yNCRE,OAAAC,EAAa,CAAE,YAAa,CAAA,EAAI,QAAS,OAAW"}